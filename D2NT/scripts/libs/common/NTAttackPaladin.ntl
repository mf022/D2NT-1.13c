function NTA_Attack(target, firstorder) {
	return NTA_PaladinAttackInt(target, firstorder);
}

function NTA_PaladinAttackInt(target, firstorder) {
	var _primaryindex;
	var _attackSkill;

	if ((NTTMGR_CheckCurse(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe, true)) || (me.hp <= parseInt(me.hpmax * NTConfig_TPChicken,10) / 100)) {
		if (!NTTMGR_VisitTown()) { return 0; }
	}
	_merc = NTC_GetMerc();
	if (_merc) {
		if ((NTTMGR_CheckCurse(NTConfig_CheckSelfSafe, NTConfig_CheckMercSafe, true)) || (_merc.hp <= parseInt(_merc.hpmax * NTConfig_MercTPChicken,10) / 100)) {
			if (!NTTMGR_VisitTown()) { return 0; }
		}
	}

	//Check if we have needed arrows or bolts
	if (_NTA_Ranged) {
		NTA_HaveArrows();
	}

	if (firstorder && NTConfig_AttackSkill[0] > -1 && NTA_GetResistance(target, _NTA_SkillDamage[0]) < 100) {
		if (GetDistance(me, target) > _NTA_SkillRange[0] || !CheckCollision(me, target, 4)) {
			var _pos = me.GetOptimalAttackPos(target.areaid, target.x, target.y, _NTA_SkillRange[0], 4);

			if (_pos) NTM_MoveTo(target.areaid, _pos[0], _pos[1], 0, false, false);
		}

		if (!NTC_CastSkill(NTConfig_AttackSkill[0], _NTA_SkillHand[0], target)) return 2;

		return 3;
	}

	_primaryindex = (target.spectype & 0x0A) ? 1 : 3;
	if (NTConfig_OnlySmiteStationary && NTConfig_AttackSkill[1] == 97 && GetBaseStat("monstats2.txt", target.classid, 56) == 1) _primaryindex = 3;

	_attackIndex = NTA_GetAttackType(target, _primaryindex, 100, 100, 100);

	if (NTConfig_AttackSkill[_attackIndex] > -1) {
		if (_NTA_SkillRange[_attackIndex] < 4 && !CheckCollision(target.areaid, target.x, target.y, 1)) return 1;

		if (!NTA_PaladinCastSkillInt(_attackIndex, target)) return 2;

		return 3;
	}
	return 1;
}

function NTA_PaladinCastSkillInt(index, target) {

	if (NTConfig_AttackSkill[index] == 112) {
		if (me.x - target.x < 1 || me.x - target.x > 2 || me.y - target.y < 1 || me.y - target.y > 2) {
			if (CheckCollision(target.areaid, target.x + 2, target.y + 2, 1)) NTM_MoveTo(target.areaid, target.x + 2, target.y + 2, 0, false, false);
			else if (me.x - target.x < -4 || me.x - target.x > 2 || me.y - target.y < 0 || me.y - target.y > 2) NTM_MoveTo(target.areaid, target.x - 4, target.y, 0, false, false);
		}
	} else {
		if (GetDistance(me, target) > _NTA_SkillRange[index] || !CheckCollision(me, target, 4)) {
			var _pos = me.GetOptimalAttackPos(target.areaid, target.x, target.y, _NTA_SkillRange[index], 4);

			if (_pos) NTM_MoveTo(target.areaid, _pos[0], _pos[1], 0, false, false);
		}
	}

	if (NTConfig_AttackSkill[index + 1] > -1) NTC_PutSkill(NTConfig_AttackSkill[index + 1], NTC_HAND_RIGHT);

	return NTC_CastSkill(NTConfig_AttackSkill[index], _NTA_SkillHand[index], target);
}
